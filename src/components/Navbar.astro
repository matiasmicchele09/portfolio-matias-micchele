---
const { data, lang } = Astro.props;

---
  <header class="fixed top-0 left-0 w-full z-50 bg-secondary-bg flex flex-wrap sm:justify-start sm:flex-nowrap w-full text-sm">
  <nav class="max-w-[85rem] w-screen mx-auto px-4 flex flex-wrap basis-full items-center justify-between">
    <div class="flex items-center gap-x-2 py-6">
      <button
        type="button"
        class="sm:hidden hs-collapse-toggle z-50 fixed relative size-9 flex justify-center items-center gap-x-2 rounded-lg border border-gray-200 bg-white text-gray-800 shadow-2xs hover:bg-gray-50 focus:outline-hidden focus:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none dark:bg-transparent dark:border-neutral-700 dark:text-white dark:hover:bg-white/10 dark:focus:bg-white/10"
        id="hs-navbar-alignment-collapse"
        aria-expanded="false"
        aria-controls="hs-navbar-alignment"
        aria-label="Toggle navigation"
        data-hs-collapse="#hs-navbar-alignment"
      >
        <!-- Iconos hamburguesa y cerrar -->
        <svg class="hs-collapse-open:hidden shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="3" x2="21" y1="6" y2="6"/><line x1="3" x2="21" y1="12" y2="12"/><line x1="3" x2="21" y1="18" y2="18"/></svg>
        <svg class="hs-collapse-open:block hidden shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
        <span class="sr-only">Toggle</span>
      </button>
    </div>
    <div
      id="hs-navbar-alignment"
      class="hs-collapse hidden overflow-visible transition-all duration-300 basis-full grow sm:grow-0 sm:basis-auto sm:block sm:order-2
        fixed inset-0 bg-secondary-bg/80 backdrop-blur-md z-40 sm:static sm:bg-transparent sm:backdrop-blur-0 sm:z-auto"
      aria-labelledby="hs-navbar-alignment-collapse"
    >
      <div class="flex flex-col gap-5 mt-5 sm:flex-row sm:items-center sm:mt-0 sm:ps-5">
        <ul class="flex flex-col items-center sm:flex-row space-y-2 sm:space-y-0 sm:space-x-10 font-semibold font-heading text-xl text-left w-full">
          {
            data.map((item: any) => (
              <li>
                <a
                  href={`/${lang}${item.path}`} 
                  class="text-primary hover:text-magenta relative inline-block py-7 after:content-[''] after:absolute after:left-0 after:bottom-0 after:h-[3px] after:w-0 after:bg-[#d946ef] after:transition-all after:duration-300 hover:after:w-full tracking-wide"
                >
                  {item.name}
                </a>
              </li>
            ))
          }
        </ul>
        <!-- Bandera de idioma -->
        <div class="relative flex flex-col items-center ml-0 sm:ml-4 mt-4 sm:mt-0">
          <button id="lang-toggle" class="flex items-center focus:outline-none">
            <img id="current-flag" src={`/svg/${lang}.svg`} alt={lang} class="w-8 h-8" />
            <svg class="w-4 h-4 ml-1 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>

          <div id="lang-dropdown" class="absolute items-center w-32 bg-text-main border shadow-lg z-10 hidden" style="margin-top: 40px;">
            <button class="w-full flex items-center px-2 py-1 hover:bg-main-bg hover:text-text-main" data-flag="es" data-img="/svg/es.svg">
              <img src="/svg/es.svg" alt="Español" class="w-8 h-8" />
              <span class="ml-2 text-sm">Español</span>
            </button>
            <button class="w-full flex items-center px-2 py-1 hover:bg-main-bg hover:text-text-main" data-flag="en" data-img="/svg/en.svg">
              <img src="/svg/en.svg" alt="English" class="w-8 h-8" />
              <span class="ml-2 text-sm">English</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>


<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleBtn = document.getElementById('hs-navbar-alignment-collapse');
    const menu = document.getElementById('hs-navbar-alignment');

    // Toggle del menú (mobile)
    if (toggleBtn && menu) {
      toggleBtn.addEventListener('click', () => {
        menu.classList.toggle('hidden');
      });
    }

    // Toggle del selector de idioma
    const langToggle = document.getElementById('lang-toggle');
    const langDropdown = document.getElementById('lang-dropdown');
    const currentFlag = document.getElementById('current-flag');

    langToggle.addEventListener('click', (e) => {
      e.stopPropagation();
      langDropdown.classList.toggle('hidden');
    });

    // Selector de idioma con rutas limpias (/es, /en)
    langDropdown.querySelectorAll('button').forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.stopPropagation();
        const selectedLang = btn.getAttribute('data-flag');
        const pathname = window.location.pathname;

        // Dividir la URL en partes
        const parts = pathname.split('/').filter(Boolean);

        // Reemplazá el idioma (primer segmento)
        if (parts.length > 0 && (parts[0] === 'es' || parts[0] === 'en')) {
          parts[0] = selectedLang;
        } else {
          parts.unshift(selectedLang);
        }

        // Redirige a la nueva URL
        window.location.pathname = '/' + parts.join('/');
      });
    });


    // Cierra el dropdown si hacés click fuera
    document.addEventListener('click', () => {
      langDropdown.classList.add('hidden');
    });

    // Cierra el menú (mobile) al hacer clic en un enlace
    menu.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', () => {
        if (window.innerWidth < 640) {
          menu.classList.add('hidden');
        }
      });
    });
  });
</script>